---
sudo: required

env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

services:
  - docker

before_install:
  # Pull container.
  - 'sudo docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'sudo docker run --detach --volume="${PWD}":/opt/bdr-infra-stack:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /opt/bdr-infra-stack/data-science-box/provision.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /opt/bdr-infra-stack/data-science-box/provision.yml'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - sudo docker exec "$(cat ${container_id})" ansible-playbook /opt/bdr-infra-stack/data-science-box/provision.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # Ensure HTOP is installed.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm which htop'

after_success:
  # Clean up.
  - 'sudo docker stop "$(cat ${container_id})"'
