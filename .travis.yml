---
sudo: required

env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    playbook: provision.yml
    inventory: example-inventory/dev
    working_dir: data-science-box
    IP: 10.0.0.42
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    playbook: provision.yml
    inventory: example-inventory/dev
    working_dir: data-science-hub
    IP: 10.0.0.43
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    playbook: dev-cluster.yml
    inventory: example-inventory/dev
    working_dir: data-science-cluster
    IP: 10.0.0.44
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    playbook: provision.yml
    inventory: example-inventory/dev
    working_dir: search-box
    IP: 10.0.0.21

services:
  - docker

before_install:
  # Pull container.
  - 'sudo docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  - 'docker network create -d bridge my-net'
  # Run container in detached state.
  - 'sudo docker run --detach --network=my-net --ip=${IP} --volume="${PWD}":/opt/bdr-infra-stack:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  #  Install required tools (to be added to ansible script prerequisites).
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm /bin/bash -c "yum update -y && yum install -y bzip2 libselinux-python libselinux selinux-policy-targeted selinux-policy libselinux-utils"'



  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm /bin/bash -c "cd /opt/bdr-infra-stack/${working_dir} && ansible-playbook ${playbook} -i ${inventory} --syntax-check"'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm /bin/bash -c "cd /opt/bdr-infra-stack/${working_dir} && ansible-playbook ${playbook} -i ${inventory}"'

  # Test role idempotence.
  #- idempotence=$(mktemp)
  #- sudo docker exec "$(cat ${container_id})" /bin/bash -c "cd /opt/bdr-infra-stack/${working_dir} && ansible-playbook ${playbook} -i ${inventory}" | tee -a ${idempotence}
  #- >
  #  tail ${idempotence}
  #  | grep -q 'changed=0.*failed=0'
  #  && (echo 'Idempotence test: pass' && exit 0)
  #  || (echo 'Idempotence test: fail' && exit 1)
  # Ensure HTOP is installed.
  #- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm which htop'

after_success:
  # Clean up.
  - 'sudo docker stop "$(cat ${container_id})"'
